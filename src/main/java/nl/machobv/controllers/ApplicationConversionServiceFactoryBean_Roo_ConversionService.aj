// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nl.machobv.controllers;

import nl.machobv.controllers.ApplicationConversionServiceFactoryBean;
import nl.machobv.models.City;
import nl.machobv.models.Route;
import nl.machobv.models.RouteWork;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<City, String> ApplicationConversionServiceFactoryBean.getCityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<nl.machobv.models.City, java.lang.String>() {
            public String convert(City city) {
                return new StringBuilder().append(city.getName()).toString();
            }
        };
    }
    
    public Converter<Long, City> ApplicationConversionServiceFactoryBean.getIdToCityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, nl.machobv.models.City>() {
            public nl.machobv.models.City convert(java.lang.Long id) {
                return City.findCity(id);
            }
        };
    }
    
    public Converter<String, City> ApplicationConversionServiceFactoryBean.getStringToCityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, nl.machobv.models.City>() {
            public nl.machobv.models.City convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), City.class);
            }
        };
    }
    
    public Converter<Route, String> ApplicationConversionServiceFactoryBean.getRouteToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<nl.machobv.models.Route, java.lang.String>() {
            public String convert(Route route) {
                return new StringBuilder().append(route.getDistance()).append(' ').append(route.getDuration()).toString();
            }
        };
    }
    
    public Converter<Long, Route> ApplicationConversionServiceFactoryBean.getIdToRouteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, nl.machobv.models.Route>() {
            public nl.machobv.models.Route convert(java.lang.Long id) {
                return Route.findRoute(id);
            }
        };
    }
    
    public Converter<String, Route> ApplicationConversionServiceFactoryBean.getStringToRouteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, nl.machobv.models.Route>() {
            public nl.machobv.models.Route convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Route.class);
            }
        };
    }
    
    public Converter<RouteWork, String> ApplicationConversionServiceFactoryBean.getRouteWorkToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<nl.machobv.models.RouteWork, java.lang.String>() {
            public String convert(RouteWork routeWork) {
                return new StringBuilder().append(routeWork.getDelay()).append(' ').append(routeWork.getStart_at()).append(' ').append(routeWork.getEnd_at()).toString();
            }
        };
    }
    
    public Converter<Long, RouteWork> ApplicationConversionServiceFactoryBean.getIdToRouteWorkConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, nl.machobv.models.RouteWork>() {
            public nl.machobv.models.RouteWork convert(java.lang.Long id) {
                return RouteWork.findRouteWork(id);
            }
        };
    }
    
    public Converter<String, RouteWork> ApplicationConversionServiceFactoryBean.getStringToRouteWorkConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, nl.machobv.models.RouteWork>() {
            public nl.machobv.models.RouteWork convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), RouteWork.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getCityToStringConverter());
        registry.addConverter(getIdToCityConverter());
        registry.addConverter(getStringToCityConverter());
        registry.addConverter(getRouteToStringConverter());
        registry.addConverter(getIdToRouteConverter());
        registry.addConverter(getStringToRouteConverter());
        registry.addConverter(getRouteWorkToStringConverter());
        registry.addConverter(getIdToRouteWorkConverter());
        registry.addConverter(getStringToRouteWorkConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
